@model TaskApplication.DataAccess.Entities.Issue
@using TaskApplication.DataAccess.Entities

@{
    ViewBag.Title = "Create new issue";
}

<h2>@ViewBag.Title</h2>

@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Issue</legend>

        <div class="editor-label">
            @Html.LabelFor(model => model.IssueName)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.IssueName)
            @Html.ValidationMessageFor(model => model.IssueName)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.IssueDescription)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.IssueDescription)
            @Html.ValidationMessageFor(model => model.IssueDescription)
        </div>

        
        <div class="editor-label">
            @Html.LabelFor(model => model.CategoryId)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.CategoryId, new SelectList((IEnumerable<Category>)ViewBag.Categories, "CategoryId", "CategoryName"))
            @Html.ValidationMessageFor(model => model.CategoryId)
        </div>

        <p>
            <input type="submit" value="Create" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
