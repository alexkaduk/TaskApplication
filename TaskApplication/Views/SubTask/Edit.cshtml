@model TaskApplication.DataAccess.Entities.SubTask
@using TaskApplication.DataAccess.Entities

@{
    ViewBag.Title = "Sub-task edit";
}
@ViewBag.SubTaskId
<h2>Sub-task edit</h2>

@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)
    @Html.HttpMethodOverride(HttpVerbs.Put)

    <fieldset>
        <legend>SubTask</legend>

        @Html.HiddenFor(model => model.SubTaskId)

        <div class="editor-label">
            @Html.LabelFor(model => model.SubTaskName)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.SubTaskName)
            @Html.ValidationMessageFor(model => model.SubTaskName)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.SubTaskDescrioption)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.SubTaskDescrioption)
            @Html.ValidationMessageFor(model => model.SubTaskDescrioption)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.StatusId)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.StatusId, new SelectList((IEnumerable<Status>)ViewBag.Statuses, "StatusId", "StatusName"))
            @*@Html.EditorFor(model => model.StatusId)*@
            @Html.ValidationMessageFor(model => model.StatusId)
        </div>

        <p>
            <input type="submit" value="Save" />@Html.ActionLink("Back to Issue", "Edit", "Issue", new { id = Model.IssueId }, null)
        </p>
    </fieldset>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
